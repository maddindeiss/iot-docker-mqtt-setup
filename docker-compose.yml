version: '3.7'

services:
  mosquitto:
    build:
      context: ./docker/mosquitto
    environment:
      MOSQUITTO_USERNAME: ${MOSQUITTO_USERNAME}
      MOSQUITTO_PASSWORD: ${MOSQUITTO_PASSWORD}
    restart: always
    volumes:
      - type: bind
        source: "./mosquitto/config"
        target: "/mosquitto/config"
        read_only: true
      - "./mosquitto/data:/mosquitto/data"
      - "./mosquitto/log:/mosquitto/log"
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
     - "iotnet"

  openhab:
    image: "openhab/openhab:latest"
    restart: always
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    ports:
      - "8080:8080"
      - "8443:8443"
      - "5007:5007"
      - "8101:8101"
    volumes:
      - "./openhab/openhab_addons:/openhab/addons"
      - "./openhab/openhab_conf:/openhab/conf"
      - "./openhab/openhab_userdata:/openhab/userdata"
    environment:
      OPENHAB_HTTP_PORT: ${OPENHAB_HTTP_PORT}
      OPENHAB_HTTPS_PORT: ${OPENHAB_HTTPS_PORT}
      EXTRA_JAVA_OPTS: ${EXTRA_JAVA_OPTS_TIMEZONE}
      USER_ID: ${OPENHAB_USER_ID}
      GROUP_ID: ${OPENHAB_GROUP_ID}
      TZ: ${TIMEZONE}
    networks:
     - "iotnet"

  node-red:
    build:
      context: ./docker/nodered
    environment:
      TZ: ${TIMEZONE}
    restart: always
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    ports:
      - "1880:1880"
    networks:
       - "iotnet"
    volumes:
      - "./nodered/data:/data"

  influx:
    image: influxdb:latest
    ports:
      - "8083:8083"
      - "8086:8086"
    restart: always
    environment:
      INFLUXDB_USER: ${INFLUXDB_USER}
      INFLUXDB_PASS: ${INFLUXDB_PASS}
      INFLUXDB_NAME: ${INFLUXDB_DBNAME}
      PRE_CREATE_DB: ${INFLUXDB_DBNAME}
    volumes:
      - ./influxdb/data:/var/lib/influxdb
    networks:
       - "iotnet"

  grafana:
    image: grafana/grafana:latest
    restart: always
    environment:
      INFLUXDB_USER: ${INFLUXDB_USER}
      INFLUXDB_PASS: ${INFLUXDB_PASS}
      INFLUXDB_NAME: ${INFLUXDB_DBNAME}
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - "iotnet"

networks:
  iotnet:
    driver: bridge
